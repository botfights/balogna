codes = """
IyByb2JvdC5weSAtLSBzYW1wbGUgbGlhcidzIGRpY2Ugcm9ib3QKaW1wb3J0IHJhbmRvbQppbXBv
cnQgbnVtcHkgYXMgbnAKaW1wb3J0IHNjaXB5IC4gbWlzYwppZiA2NCAtIDY0OiBpMTFpSWlpSWlp
CmlmIDY1IC0gNjU6IE8wIC8gaUlpaTFJMTFJMUlJMSAlIE9vb29vb29vT08gLSBpMUlJaQpkZWYg
bzBPTzAwICggaGFuZCApIDoKIG9vID0gNgogaTFpSUkxSWlpSWlJMSA9IDYKIGlmIDQwIC0gNDA6
IG9vT29PME8wMCAqIElJaUlpSUkxMWkKIGZvciBvMG9PT28wTzBPb28gLCBJMWlpMTFpSWkxMWkg
aW4gaGFuZCAuIGl0ZXJpdGVtcyAoICkgOgogIGlmIEkxaWkxMWlJaTExaSA8IGkxaUlJMUlpaUlp
STEgOgogICBvbyA9IG8wb09PbzBPME9vbwogICBpMWlJSTFJaWlJaUkxID0gSTFpaTExaUlpMTFp
CiAgIGlmIDQ4IC0gNDg6IG9PMG8gLyBPT29vT09vIC8gSTExaSAvIElpMUkKIHJldHVybiAoIGkx
aUlJMUlpaUlpSTEgLCBvbyApCiBpZiA0OCAtIDQ4OiBpSUkxMTFpICUgSWlJSSArIEkxSWkxMTEg
LyBvb09vTzBvICogbzAwTzBvbwogaWYgOTcgLSA5Nzogb08wbzBvb08wIC0gSUlJSSAvIE8wb08g
LSBvMG9PMApkZWYgb28wMCAoIGhhbmQgKSA6CiBvMDAgPSAwCiBPbzBvTzBvb28gPSAwCiBpZiA1
NiAtIDU2OiBvb09vTzBvIC0gaTFJSWkKIGZvciBvMG9PT28wTzBPb28gLCBJMWlpMTFpSWkxMWkg
aW4gaGFuZCAuIGl0ZXJpdGVtcyAoICkgOgogIGlmIEkxaWkxMWlJaTExaSA+PSBPbzBvTzBvb28g
OgogICBpZiBvMG9PT28wTzBPb28gPiBvMDAgOgogICAgbzAwID0gbzBvT09vME8wT29vCiAgICBP
bzBvTzBvb28gPSBJMWlpMTFpSWkxMWkKICAgIGlmIDY0IC0gNjQ6IE8wb08gKyBvTzBvMG9vTzAK
IHJldHVybiAoIE9vMG9PMG9vbyAsIG8wMCApCiBpZiAxMCAtIDEwOiBpMTFpSWlpSWlpIC8gSWlJ
SSAlIG9vT29PME8wMAogaWYgNzUgLSA3NTogaTExaUlpaUlpaSArIElJSUkgLiBJaTFJICogb08w
bzBvb08wCmRlZiBvbzAgKCBsYXN0X2ZhY2UgLCBsYXN0X2NvdW50ICwgdG90YWxfZGVlc2UgKSA6
CiBpZiBsYXN0X2NvdW50IDwgdG90YWxfZGVlc2UgOgogIHJldHVybiBUcnVlCiBlbGlmIGxhc3Rf
Y291bnQgPT0gdG90YWxfZGVlc2UgYW5kIGxhc3RfZmFjZSA8IDYgOgogIHJldHVybiBUcnVlCiBl
bHNlIDoKICByZXR1cm4gRmFsc2UKICBpZiA4MCAtIDgwOiBpMUlJaSAqIGlJaWkxSTExSTFJSTEg
LyBJSUlJICUgSWlJSSArIE8wb08gLiBJSUlJCiAgaWYgOTggLSA5ODogaTExaUlpaUlpaSAqIElJ
aUlpSUkxMWkgJSBvTzBvMG9vTzAgKiBvTzBvMG9vTzAgKiBvb09vTzBPMDAKZGVmIG8wbzBPbzBv
b29vMCAoIGhhbmQgLCBsYXN0X2RpY2UgLCBsYXN0X3F1YW50aXR5ICkgOgogaWYgOTcgLSA5Nzog
b08wbyAtIG8wb08wCiBpZiA1NCAtIDU0OiBvMG9PMCAuIG8wb08wIC8gaUlpaTFJMTFJMUlJMSAv
IG9vT29PMG8gKyBJaUlJIC8gSWkxSQogSTFpMUkgPSBzb3J0ZWQgKCBoYW5kICwga2V5ID0gaGFu
ZCAuIGdldCApCiBpZiA3MiAtIDcyOiBvTzBvICUgSTFJaTExMSAuIElJaUlpSUkxMWkgLyBvb09v
TzBvICogSUlpSWlJSTExaQogZm9yIG8wb09PbzBPME9vbyBpbiBJMWkxSSA6CiAgSTFpaTExaUlp
MTFpID0gaGFuZCBbIG8wb09PbzBPME9vbyBdCiAgaWYgMzEgLSAzMTogb29Pb08wTzAwICsgT09v
b09PbyAuIE8wb08KICBpZiBJMWlpMTFpSWkxMWkgPiBsYXN0X3F1YW50aXR5IDoKICAgcmV0dXJu
ICggSTFpaTExaUlpMTFpICwgbzBvT09vME8wT29vICkKICAgaWYgNjggLSA2ODogSUlpSWlJSTEx
aSAtIGkxMWlJaWlJaWkgLSBPT29vT09vIC8gSTFJaTExMSAtIE9Pb29PT28gKyBpMUlJaQogIGlm
IEkxaWkxMWlJaTExaSA9PSBsYXN0X3F1YW50aXR5IDoKICAgaWYgbzBvT09vME8wT29vID4gbGFz
dF9kaWNlIDoKICAgIHJldHVybiAoIEkxaWkxMWlJaTExaSAsIG8wb09PbzBPME9vbyApCiAgICBp
ZiA0OCAtIDQ4OiBPb29vb29vb09PICUgSWkxSSAuIElJaUlpSUkxMWkgLSBvMDBPMG9vICUgaTFJ
SWkgJSBPb29vb29vb09PCiAgICBpZiAzIC0gMzogb08wbzBvb08wICsgTzAKZGVmIEkxSWkgKCBj
b21iaW5hdGlvbnMgLCB1bmtub3duICkgOgogSTFpaTExaUlpMTFpID0gMC4wCiBvMG9PbzBPb28w
TyA9IGNvbWJpbmF0aW9ucwogT08wME8wTzBPMDBPbyA9IHVua25vd24KIGlmIDI1IC0gMjU6IElp
MUkgJSBvb09vTzBPMDAgLSBvb09vTzBPMDAgLiBvb09vTzBPMDAKIGZvciBJaTEgaW4gcmFuZ2Ug
KCBvMG9PbzBPb28wTyAsIE9PMDBPME8wTzAwT28gKSA6CiAgSTFpaTExaUlpMTFpICs9IHNjaXB5
IC4gbWlzYyAuIGNvbWIgKCBPTzAwTzBPME8wME9vICwgSWkxICkgKiAoIDEgLyA2LjAgKSAqKiBJ
aTEgKiAoIDUgLyA2LjAgKSAqKiAoIE9PMDBPME8wTzAwT28gLSBJaTEgKQogIGlmIDcxIC0gNzE6
IE9Pb29PT28KIHJldHVybiBJMWlpMTFpSWkxMWkKIGlmIDU1IC0gNTU6IE9Pb29PT28gLyBpSUkx
MTFpICogSTFJaTExMQogaWYgODYgLSA4NjogaTExaUlpaUlpaSArIG8wME8wb28gKyBvMG9PMCAq
IG9vT29PMG8gKyBJaTFJCmRlZiBnZXRfcGxheSAoIG1lICwgaGFuZHMgLCBoaXN0b3J5ICkgOgog
aWYgNjggLSA2ODogSTExaSAuIElpSUkgLiBpMTFpSWlpSWlpCiBJSSA9IGhhbmRzIC4gc3BsaXQg
KCAnLCcgKQogaUkgPSB7IH0KIGlJMTFpaWlJMUlJID0gMAogTzBvb29vME9vMDAgPSAwCiBpZiAx
NyAtIDE3OiBpSWlpMUkxMUkxSUkxICUgbzBvTzAgJSBpMTFpSWlpSWlpIC4gSUlpSWlJSTExaQog
TzBvME9vID0geyB9CiBpZiA3OCAtIDc4OiBpSWlpMUkxMUkxSUkxIC0gbzAwTzBvbyAqIE9Pb29P
T28gKyBJaTFJICsgb08wbzBvb08wICsgb08wbzBvb08wCiBmb3IgSTExSTExaTFJIGluIElJIDoK
ICBpaTExaTFpSUlJICwgSWkxSU9vMG8wID0gSTExSTExaTFJIC4gc3BsaXQgKCAnOicgKQogIGlm
IGlpMTFpMWlJSUkgPT0gbWUgOgogICBmb3IgbzBvT09vME8wT29vIGluIElpMUlPbzBvMCA6CiAg
ICBvMG9PT28wTzBPb28gPSBpbnQgKCBvMG9PT28wTzBPb28gKQogICAgaUkgWyBvMG9PT28wTzBP
b28gXSA9IGlJIC4gZ2V0ICggbzBvT09vME8wT29vICwgMCApICsgMQogICAgaWYgNDkgLSA0OTog
SWlJSSAlIG8wME8wb28gKyBpMUlJaSAuIElJaUlpSUkxMWkgJSBpSUkxMTFpCiAgTzBvME9vIFsg
aWkxMWkxaUlJSSBdID0gbGVuICggSWkxSU9vMG8wICkKICBpZiA0OCAtIDQ4OiBvb09vTzBvICsg
b29Pb08wbyAvIG9vT29PME8wMCAvIGlJaWkxSTExSTFJSTEKICBpSTExaWlpSTFJSSArPSBsZW4g
KCBJaTFJT28wbzAgKQogIE8wb29vbzBPbzAwICs9IDEKICBpZiAyMCAtIDIwOiBJaTFJCiAgaWYg
NzcgLSA3NzogSTExaSAvIG9vT29PMG8KICBpZiA5OCAtIDk4OiBpSWlpMUkxMUkxSUkxIC8gaTFJ
SWkgLyBpMTFpSWlpSWlpIC8gSWkxSQogaWYgMCA9PSBsZW4gKCBoaXN0b3J5ICkgOgogIE9vMG9P
MG9vbyAsIG8wMCA9IG9vMDAgKCBpSSApCiAgcmV0dXJuICclcyVzJyAlICggT28wb08wb29vICwg
bzAwICkKIGVsc2UgOgogIGlmIDI4IC0gMjg6IEkxSWkxMTEgLSBJSUlJIC4gSUlJSSArIEkxMWkg
LSBPb29vb29vb09PICsgTzAKICBvT29Pb29PbzBvMCA9IGhpc3RvcnkgLiBzcGxpdCAoICcsJyAp
IFsgLSAxIF0KICBPT09PICwgT09PMDAgPSBvT29Pb29PbzBvMCAuIHNwbGl0ICggJzonICkKICBP
T08wMCA9IGludCAoIE9PTzAwICkKICBpZiAyMSAtIDIxOiBPb29vb29vb09PIC0gT29vb29vb29P
TwogIGlmIDggLSA4OiBJMTFpCiAgaWYgNjAgLSA2MDogb29Pb08wbyAvIG9vT29PMG8KICBpZiAw
ID09IE9PTzAwIDoKICAgcmV0dXJuIDAKICAgaWYgNDYgLSA0NjogbzAwTzBvbyAqIEkxSWkxMTEg
LSBPT29vT09vICogSWlJSSAtIE8wb08KICBvbzBvMDAgPSBPT08wMCAlIDEwCiAgT29vT29vbyA9
IE9PTzAwIC8vIDEwCiAgaWYgOTcgLSA5NzogbzBvTzAgLSBJMUlpMTExICogaTExaUlpaUlpaSAv
IEkxMWkgJSBPMG9PIC0gT29vb29vb29PTwogIGlmIDU5IC0gNTk6IE8wICsgSUlpSWlJSTExaSAr
IElJSUkgJSBJSWlJaUlJMTFpCiAgaWYgNzAgLSA3MDogb08wbzBvb08wICogaUlJMTExaQogIGlm
IE9vb09vb28gPj0gaUkxMWlpaUkxSUkgOgogICByZXR1cm4gMAogICBpZiA0NiAtIDQ2OiBvMG9P
MCAvIE9Pb29PT28KICBPT09vTzBPMG8gPSBvbzAgKCBvbzBvMDAgLCBPb29Pb29vICwgaUkxMWlp
aUkxSUkgKQogIGlmIDU1IC0gNTU6IEkxSWkxMTEgKyBvMG9PMCAuIGkxSUlpIC0gaUlJMTExaSAu
IE8wIC0gbzBvTzAKICBpZiBPT09vTzBPMG8gOgogICBvME8gPSBvMG8wT28wb29vbzAgKAogaUkg
LCBvbzBvMDAgLAogT29vT29vbwogKQogICBpZiA3MiAtIDcyOiBvTzBvMG9vTzAgLyBpMUlJaSAq
IG9PMG8gLSBPMG9PCiAgIGlmIG8wTyBpcyBub3QgTm9uZSA6CiAgICBPbzBPME8wb29PME8gPSBv
ME8gWyAwIF0KICAgIElJSUlpaSA9IG8wTyBbIDEgXQogICAgaWYgNzAgLSA3MDogbzAwTzBvbyAv
IG9vT29PMG8gLiBvTzBvMG9vTzAgJSBvTzBvCiAgICByZXR1cm4gJyVzJXMnICUgKCBPbzBPME8w
b29PME8gLCBJSUlJaWkgKQogICAgaWYgNjcgLSA2NzogSTExaSAqIElpMUkgLiBJSUlJIC0gT09v
b09PbyAqIElpMUkKICAgIGlmIDQ2IC0gNDY6IEkxSWkxMTEgKyBJMTFpIC4gSUlpSWlJSTExaSAq
IElpSUkgJSBJSUlJCiAgIE9vMDAwbyA9IGlJIC4gZ2V0ICggb28wbzAwICwgMCApCiAgIGlmIDcg
LSA3OiBvMG9PMCAqIE9Pb29PT28gJSBJaUlJIC4gSUlJSQogICBpZiBPb29Pb29vID4gT28wMDBv
IDoKICAgIElpMWlJaUlJMWlpMSA9ICggT29vT29vbyAtIE9vMDAwbyApIC0gMQogICBlbHNlIDoK
ICAgIGlmIDYyIC0gNjI6IGlJaWkxSTExSTFJSTEgKiBJMTFpCiAgICBpZiAyNiAtIDI2OiBvTzBv
MG9vTzAgLiBPMG9PCiAgICByZXR1cm4gJyVzJXMnICUgKCBPb29Pb29vICsgMSAsIG9vMG8wMCAp
CiAgICBpZiA2OCAtIDY4OiBPT29vT09vCiAgIElJaTFpSUlpSSA9IGlJMTFpaWlJMUlJIC0gbGVu
ICggaUkgKQogICBpZiA1OCAtIDU4OiBvMG9PMCAvIG9vT29PME8wMCAtIEkxSWkxMTEgLSBpMTFp
SWlpSWlpICUgSTExaSAtIE8wb08KICAgSUlJSTExSTFJID0gSTFJaSAoIElpMWlJaUlJMWlpMSAs
IElJaTFpSUlpSSApCiAgIE9PTzBvID0gSTFJaSAoIElpMWlJaUlJMWlpMSArIDEgLCBJSWkxaUlJ
aUkgKQogICBwcmludCAoICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LSIgKQogICBwcmludCAoICJndWVzc2VkOiAlcyIgJSBPb29Pb29vICkKICAgcHJpbnQgKCAicXR5
OiAlcywgdW5rbm93bnMgJXMiICUgKCBJaTFpSWlJSTFpaTEgLCBJSWkxaUlJaUkgKSApCiAgIHBy
aW50ICggInByb2JhYmlsaXR5OiAlcyIgJSBJSUlJMTFJMUkgKQogICBwcmludCAoICJwcm9iYWJp
bGl0eSsxOiAlcyIgJSBPT08wbyApCiAgIHByaW50ICggIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tIiApCiAgIGlmIDMwIC0gMzA6IGlJaWkxSTExSTFJSTEgLyBvMG9P
MCAtIE8wb08gLSBvb09vTzBPMDAgJSBvTzBvMG9vTzAKICAgaWYgSUlJSTExSTFJID49IC43MCA6
CiAgICBpZiA0OSAtIDQ5OiBJSWlJaUlJMTFpICUgbzBvTzAgLiBvMG9PMCAuIG9vT29PMG8gKiBv
MG9PMAogICAgaWYgT09PMG8gPj0gLjQ1IDoKICAgICBpZiA5NyAtIDk3OiBvMDBPMG9vICsgSWkx
SSAuIEkxSWkxMTEgKyBpSUkxMTFpICUgb08wbzBvb08wCiAgICAgcmV0dXJuICclcyVzJyAlICgg
T29vT29vbyArIDEgLCBvbzBvMDAgKQogICAgZWxzZSA6CiAgICAgaWYgOTUgLSA5NTogaTFJSWkK
ICAgICBpZiAzIC0gMzogTzBvTyAtIE8wIC8gTzBvTyAlIE9Pb29PT28gLyBPMG9PIC4gSUlpSWlJ
STExaQogICAgIE9vMG9PMG9vbyAsIG8wMCA9IG9vMDAgKCBpSSApCiAgICAgaWYgNTAgLSA1MDog
SUlJSQogICAgIGlmIG8wMCA+IG9vMG8wMCA6CiAgICAgIHJldHVybiAnJXMlcycgJSAoIE9vb09v
b28gLCBvMDAgKQogICAgIGVsaWYgb28wbzAwICE9IDYgOgogICAgICByZXR1cm4gJyVzJXMnICUg
KCBPb29Pb29vICwgb28wbzAwICsgMSApCiAgICAgZWxpZiBJaTFpSWlJSTFpaTEgPD0gMiA6CiAg
ICAgIHJldHVybiAnJXMlcycgJSAoIE9vb09vb28gKyAxICwgbzAwICkKICAgICAgaWYgMTQgLSAx
NDogb29Pb08wbyAlIE9Pb29PT28gKiBvb09vTzBvCiAgcHJpbnQgKCAiRU5EIE9GIFRIRSBMSU5F
LCBMSUFSISIgKQogIHJldHVybiAwCiMgZGQ2NzhmYWFlOWFjMTY3YmM4M2FiZjc4ZTVjYjJmM2Yw
Njg4ZDNhMwo=
"""
import base64

eval(
    compile(
        base64.b64decode(codes),
        '<string>',
        'exec'
    )
)
